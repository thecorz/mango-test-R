
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin18.5.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "drawsample"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "drawsample-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('drawsample')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("draws")
> ### * draws
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: draws
> ### Title: Draw a number from a given distribution
> ### Aliases: draws
> 
> ### ** Examples
> 
> # Sample 100 draws from the normal distribtuion wih mean = 0
> # and standard desviation = 1:
> draws(100, 'normal', mean = 0, sd = 1)
$parameters
       n     dist     mean       sd 
   "100" "normal"      "0"      "1" 

$samples
  [1] -0.626453811  0.183643324 -0.835628612  1.595280802  0.329507772
  [6] -0.820468384  0.487429052  0.738324705  0.575781352 -0.305388387
 [11]  1.511781168  0.389843236 -0.621240581 -2.214699887  1.124930918
 [16] -0.044933609 -0.016190263  0.943836211  0.821221195  0.593901321
 [21]  0.918977372  0.782136301  0.074564983 -1.989351696  0.619825748
 [26] -0.056128740 -0.155795507 -1.470752384 -0.478150055  0.417941560
 [31]  1.358679552 -0.102787727  0.387671612 -0.053805041 -1.377059557
 [36] -0.414994563 -0.394289954 -0.059313397  1.100025372  0.763175748
 [41] -0.164523596 -0.253361680  0.696963375  0.556663199 -0.688755695
 [46] -0.707495157  0.364581962  0.768532925 -0.112346212  0.881107726
 [51]  0.398105880 -0.612026393  0.341119691 -1.129363096  1.433023702
 [56]  1.980399899 -0.367221476 -1.044134626  0.569719627 -0.135054604
 [61]  2.401617761 -0.039240003  0.689739362  0.028002159 -0.743273209
 [66]  0.188792300 -1.804958629  1.465554862  0.153253338  2.172611670
 [71]  0.475509529 -0.709946431  0.610726353 -0.934097632 -1.253633400
 [76]  0.291446236 -0.443291873  0.001105352  0.074341324 -0.589520946
 [81] -0.568668733 -0.135178615  1.178086997 -1.523566800  0.593946188
 [86]  0.332950371  1.063099837 -0.304183924  0.370018810  0.267098791
 [91] -0.542520031  1.207867806  1.160402616  0.700213650  1.586833455
 [96]  0.558486426 -1.276592208 -0.573265414 -1.224612615 -0.473400636

attr(,"class")
[1] "draws"
> 
> # Sample 100 draws from the poison distribution with lambda = 1
> draws(100, 'poisson', lambda =1)
$parameters
        n      dist    lambda 
    "100" "poisson"       "1" 

$samples
  [1] 0 0 1 0 0 1 1 0 0 1 3 0 2 3 2 0 1 3 3 0 0 0 0 1 3 1 0 0 1 2 0 0 1 1 1 1 1
 [38] 1 1 1 0 1 2 0 1 0 1 0 1 3 2 3 1 1 1 0 0 1 1 3 1 0 0 2 1 0 0 2 1 0 0 0 1 0
 [75] 0 0 0 0 1 2 0 1 2 1 0 0 0 0 0 0 0 0 4 0 1 1 0 0 0 3

attr(,"class")
[1] "draws"
> 
> # Sample 100 draws from the binomial distribution with size (n) = 50
> # and probability (p)
> draws(100, 'poisson', lambda =1)
$parameters
        n      dist    lambda 
    "100" "poisson"       "1" 

$samples
  [1] 1 0 1 1 1 4 0 2 0 1 0 0 2 1 0 1 0 0 3 1 1 0 1 4 2 3 2 2 0 2 4 0 1 2 0 0 1
 [38] 0 1 3 4 0 1 1 1 0 1 0 1 1 1 0 2 1 4 0 2 0 2 1 0 0 2 0 1 2 0 1 1 1 1 1 3 0
 [75] 0 1 0 2 0 1 1 1 1 3 0 0 2 2 0 3 0 0 3 1 0 0 1 0 0 0

attr(,"class")
[1] "draws"
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("draws", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.114 0.009 0.125 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
