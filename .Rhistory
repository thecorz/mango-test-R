period = as.factor(period),
playoffs = as.factor(playoffs),
season = as.factor(season),
shot_made = as.factor(shot_made),
## New variables
# split the scores
end_home_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[1])),
end_away_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[2])),
# split the teams
home_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[1])),
away_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[2])),
# split the scores
elapsed_home_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[1])),
elapsed_away_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[2])),
# time
time_min_sec = ms(time),
time_dur_sec = dminutes(15) - as.duration(time_min_sec),
time_elapsed_min_sec = as.period(time_dur_sec),
time_elapsed_min = as.numeric(time_elapsed_min_sec, "minutes"),
time_elapsed_sec = as.numeric(time_elapsed_min_sec, "seconds"),
)
p <- ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
p
hist(df$time_elapsed_min)
df[df$time_elapsed_min >12,]
df <- df %>%
mutate(
## Trasform variables
game_id = as.character(game_id),
period = as.factor(period),
playoffs = as.factor(playoffs),
season = as.factor(season),
shot_made = as.factor(shot_made),
## New variables
# split the scores
end_home_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[1])),
end_away_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[2])),
# split the teams
home_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[1])),
away_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[2])),
# split the scores
elapsed_home_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[1])),
elapsed_away_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[2])),
# time
time_min_sec = ms(time),
time_dur_sec = dminutes(12) - as.duration(time_min_sec),
time_elapsed_min_sec = as.period(time_dur_sec),
time_elapsed_min = as.numeric(time_elapsed_min_sec, "minutes"),
time_elapsed_sec = as.numeric(time_elapsed_min_sec, "seconds"),
)
hist(df$time_elapsed_min)
df <- read.csv('data/free_throws.csv', header = TRUE, stringsAsFactors = FALSE)
df <- df %>%
mutate(
## Trasform variables
game_id = as.character(game_id),
period = as.factor(period),
playoffs = as.factor(playoffs),
season = as.factor(season),
shot_made = as.factor(shot_made),
## New variables
# split the scores
end_home_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[1])),
end_away_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[2])),
# split the teams
home_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[1])),
away_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[2])),
# split the scores
elapsed_home_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[1])),
elapsed_away_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[2])),
# time
time_min_sec = ms(time),
time_dur_sec = dminutes(12) - as.duration(time_min_sec),
time_elapsed_min_sec = as.period(time_dur_sec),
time_elapsed_min = as.numeric(time_elapsed_min_sec, "minutes"),
time_elapsed_sec = as.numeric(time_elapsed_min_sec, "seconds"),
)
str(df)
p <- ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
p <- ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
p
df[df$time_elapsed_min >=12,]
df$time_min_sec[df$time == "00:00",]
df[df$time == "00:00",]
df[df$time == "00:00"]
df[df$time == "00:00",]
df[df$time == "00:01",]
df[df$time_min_sec == duration(0),]
df$time_min_sec[df$time_min_sec == duration(0)]
df$time_min_sec[df$time_min_sec == duration(0)] <- duration(1S)
df$time_min_sec[df$time_min_sec == duration(0)] <- duration(1, "second")
df$time_min_sec[df$time_min_sec == duration(0)]
df[df$time_min_sec == duration(0), "time_min_sec"] <- duration(1, "second")
df[df$time_min_sec == duration(0), "time_min_sec"]
df[df$time_min_sec == period(0), "time_min_sec"]
df[df$time_min_sec == period(0)]
df[df$time_min_sec == period(0)]
hist(df$time_min_sec)
df[df$time_min_sec == 0]
df[df$time_min_sec == 0]
df$time_min_sec[1]
type(df$time_min_sec[1])
typeof(df$time_min_sec[1])
class(df$time_min_sec[1])
df[df$time_min_sec == period(0)]
df[df$time_min_sec == period(0),]
df[df$time_min_sec == period(1),]
df <- df%>%
mutate(
time_dur_sec = dminutes(12) - as.duration(time_min_sec),
time_elapsed_min_sec = as.period(time_dur_sec),
time_elapsed_min = as.numeric(time_elapsed_min_sec, "minutes"),
time_elapsed_sec = as.numeric(time_elapsed_min_sec, "seconds"),
)
p <- ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
p
p +  facet_grid(rows = vars(period)
p +  facet_grid(rows = vars(period))
p +  facet_grid(rows = vars(period))
ggplot(data = df) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period <=4]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period <=4],) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period <=4,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
df[df$period <= 4,]
ggplot(data = df[df$period =< 4,]) +
ggplot(data = df[df$period < 5,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
p <- ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
p
ggplot(data = df[df$period == 1,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period > 1,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period > 1,]) +
geom_count(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
df[df$period > 1,]
df[df$period > 1,]
df[df$period == 1,]
df[df$period %in% c(1,2,3,4),]
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(season))
ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(season), cols = vars(period))
p <- ggplot(data = df[df$end_home_score-df$end_away_score < 8 & df$period == 4,]) +
geom_bar(aes(x=time_min))
p
ggplot(data = df[df$end_home_score-df$end_away_score < 8 & df$period == 4,]) +
geom_bar(aes(x=time_elapsed_min))
ggplot(data = df[df$end_home_score-df$end_away_score < 8 & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[df$end_home_score-df$end_away_score < 4 & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[df$end_home_score-df$end_away_score < 2 & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[abs(df$end_home_score-df$end_away_score) < 4  & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[abs(df$end_home_score-df$end_away_score) < 2  & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[abs(df$end_home_score-df$end_away_score) < 1  & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[abs(df$end_home_score-df$end_away_score) < 8  & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[abs(df$end_home_score-df$end_away_score) < 12  & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
# Select the free shots from the 11th minute of the 4th period
df[floor(df$time_elapsed_min) == 11]
# Select the free shots from the 11th minute of the 4th period
df[floor(df$time_elapsed_min) == 11,]
# Select the free shots from the 11th minute of the 4th period. Our study object is the game for this hypothesis
df[floor(df$time_elapsed_min) == 11 & df$period == 4, c("end_home_score", "end_away_score", "game_id")]
# Select the free shots from the 11th minute of the 4th period. Our study object is the game for this hypothesis
last_min <- df[floor(df$time_elapsed_min) == 11 & df$period == 4, c("end_home_score", "end_away_score", "game_id")]
last_min %>%
group_by("game_id") %>%
summarise(total_free_shots = n())
last_min
last_min %>%
group_by("game_id") %>%
summarise(total_free_shots = n())
last_min %>%
group_by("game_id")
last_min %>%
group_by(game_id) %>%
summarise(total_free_shots = )
last_min %>%
group_by(game_id) %>%
summarise(total_free_shots = n())
tbl <- tibble(
x = 1:10,
y = factor(rep(c("a", "c"), each  = 5), levels = c("a", "b", "c"))
)
tbl
tbl %>%
group_by(y) %>%
group_rows()
tbl
tbl %>%
group_by(y)
tbl %>%
group_by(y) %>%
group_rows()
last_min %>%
group_by(game_id, end_home_score, end_away_score) %>%
summarise(total_free_shots = n())
last_min_game <- last_min %>%
group_by(game_id, end_home_score, end_away_score) %>%
summarise(total_free_shots = n())
head(last_min_game)
last_min_game <- last_min_game %>%
mutate(
end_score_diff = abs(end_home_score - end_away_score)
)
head(last_min_game)
par(mfrow=(2,1))
par(mfrow=c(2,1))
par(mfrow=c(2,1))
hist(last_min_game$end_score_diff)
hist(last_min_game$total_free_shots)
par(mfrow=c(2,1))
hist(last_min_game$end_score_diff)
hist(last_min_game$total_free_shots)
dev.off()
par(mfrow=c(2,1))
hist(last_min_game$end_score_diff)
par(mfrow=c(2,1))
hist(last_min_game$end_score_diff)
hist(last_min_game$total_free_shots)
hist(last_min_game$total_free_shots, breaks = 20)
breaks <- seq(1,15,1)
breaks
hist(last_min_game$total_free_shots, breaks = breaks)
breaks_lim <- seq(1,15,1)
hist(last_min_game$total_free_shots, breaks = breaks_lim)
breaks_lim <- seq(1,25,1)
hist(last_min_game$total_free_shots, breaks = breaks_lim)
max(last_min_game$total_free_shots)
breaks_lim <- seq(1,26,1)
hist(last_min_game$total_free_shots, breaks = breaks_lim)
breaks_end_score_diff <- seq(1,max(last_min_game$end_score_diff),1)
hist(last_min_game$end_score_diff, breaks = breaks_end_score_diff)
hist(log(last_min_game$end_score_diff), breaks = breaks_end_score_diff)
hist(log(last_min_game$end_score_diff))
poisson_regression <- glm(total_free_shots ~ end_score_diff, data = last_min_game, family = poisson(link = 'log'))
summary(poisson_regression)
ggplot(last_min_game, aes(x = end_score_diff, y = total_free_shots)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period), ccols = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period), cols = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(cols = vars(period), rows = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min), y = (..count..)/sum(..count..))) +
facet_grid(cols = vars(period), rows = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min), y = (..count..)/sum(..count..)))
+
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min), y = (..count..)/sum(..count..))) +
facet_grid(cols = vars(period), rows = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min), y = (..count..)/sum(..count..))) +
facet_grid(cols = vars(period))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(cols = vars(period), rows = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4) & df$playoffs == 'playoffs',]) +
geom_bar(aes(x=floor(time_elapsed_min)))
facet_grid(cols = vars(period)
ggplot(data = df[df$period %in% c(1,2,3,4) & df$playoffs == 'playoffs',]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(cols = vars(period))
library(drawsample)
draws(10, 'poisson', lambda=10)
test <- draws(10, 'poisson', lambda=10)
summary(test)
baz <- function(x) UseMethod("baz", x)
baz.A <- function(x) "A"
baz.B <- function(x) "B"
ab <- structure(1, class = c("A", "B"))
ab
ba <- structure(1, class = c("B", "A"))
baz(ab)
baz(ba)
NextMethod() works like UseMethod but instead of dispatching on the first element of the class vector, it will dispatch based on the second (or subsequent) element:
baz.C <- function(x) c("C", NextMethod())
ca <- structure(1, class = c("C", "A"))
cb <- structure(1, class = c("C", "B"))
baz(ca)
baz(cb)
library('ggplot2')
library('dplyr')
library('GGally')
library('lubridate')
df <- read.csv('data/free_throws.csv', header = TRUE, stringsAsFactors = FALSE)
head(df)
str(df)
times = as.integer(sapply(df$time, function(x) unlist(strsplit(x, ':'))[1]))
hist(times)
df[,c("shot_made", 'play')]
sum(is.na(df))
df <- df %>%
mutate(
## Trasform variables
game_id = as.character(game_id),
period = as.factor(period),
playoffs = as.factor(playoffs),
season = as.factor(season),
shot_made = as.factor(shot_made),
## New variables
# split the scores
end_home_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[1])),
end_away_score = as.integer(sapply(end_result, function(x) unlist(strsplit(x, ' - '))[2])),
# split the teams
home_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[1])),
away_team = as.character(sapply(game, function(x) unlist(strsplit(x, ' - '))[2])),
# split the scores
elapsed_home_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[1])),
elapsed_away_score = as.integer(sapply(score, function(x) unlist(strsplit(x, ' - '))[2])),
# time
time_min_sec = ms(time),
time_dur_sec = dminutes(12) - as.duration(time_min_sec),
time_elapsed_min_sec = as.period(time_dur_sec),
time_elapsed_min = as.numeric(time_elapsed_min_sec, "minutes"),
time_elapsed_sec = as.numeric(time_elapsed_min_sec, "seconds"),
)
str(df)
head(df)
df[1:100,'end_home_score']
head(df$end_result, 100)
summary(df)
df_pair_end_score <- df[,c("playoffs", "season", "end_home_score", "end_away_score")]
ggpairs(df_pair_end_score, labeller = "label_context") + theme_grey(base_size = 30)
df_pair_shot_made <- df[,c('period', "playoffs", "season", "time_min", "shot_made")]
df_pair_shot_made <- df[,c("period", "playoffs", "season", "time_min", "shot_made")]
df_pair_shot_made <- df[,c("period", "playoffs", "season", "time_elapased_min", "shot_made")]
df_pair_shot_made <- df[,c("period", "playoffs", "season", "time_elapsed_min", "shot_made")]
ggpairs(df_pair_shot_made) + theme_grey(base_size = 30)
ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
df[df$time_min_sec == period(0), "time_min_sec"] <- duration(1, "second")
# Check there is not more rows with period = 0
df[df$time_min_sec == period(0),]
df[df$time_min_sec == period(0), "time_min_sec"] <- duration(1, "second")
# Check there is not more rows with period = 0
df[df$time_min_sec == period(0),]
df$time_min_sec == period(0)
# Check there is not more rows with period = 0
df[df$time_min_sec == period(0),]
df[df$time_min_sec == period(0), "time_min_sec"] <- duration(1, "second")
# Check there is not more rows with period = 0
df[df$time_min_sec == period(0),]
ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
df <- df%>%
mutate(
time_dur_sec = dminutes(12) - as.duration(time_min_sec),
time_elapsed_min_sec = as.period(time_dur_sec),
time_elapsed_min = as.numeric(time_elapsed_min_sec, "minutes"),
time_elapsed_sec = as.numeric(time_elapsed_min_sec, "seconds"),
)
ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(period))
ggplot(data = df[df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(rows = vars(season))
ggplot(data = df[abs(df$end_home_score-df$end_away_score) < 12  & df$period == 4,]) +
geom_bar(aes(x=floor(time_elapsed_min)))
ggplot(data = df[df$period %in% c(1,2,3,4),]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(cols = vars(period), rows = vars(playoffs))
ggplot(data = df[df$period %in% c(1,2,3,4) & df$playoffs == 'playoffs',]) +
geom_bar(aes(x=floor(time_elapsed_min))) +
facet_grid(cols = vars(period))
# Select the free shots from the 11th minute of the 4th period. Our study object is the game for this hypothesis
last_min <- df[floor(df$time_elapsed_min) == 11 & df$period == 4, c("end_home_score", "end_away_score", "game_id")]
last_min_game <- last_min %>%
group_by(game_id, end_home_score, end_away_score) %>%
summarise(total_free_shots = n())
last_min_game <- last_min_game %>%
mutate(
end_score_diff = abs(end_home_score - end_away_score)
)
head(last_min_game)
# Select the free shots from the 11th minute of the 4th period. Our study object is the game for this hypothesis
last_min <- df[floor(df$time_elapsed_min) == 11 & df$period == 4, c("end_home_score", "end_away_score", "game_id")]
last_min_game <- last_min %>%
group_by(game_id, end_home_score, end_away_score) %>%
summarise(total_free_shots = n())
last_min_game <- last_min_game %>%
mutate(
end_score_diff = abs(end_home_score - end_away_score)
)
head(last_min_game)
breaks_free_shots <- seq(1,max(last_min_game$total_free_shots),1)
hist(last_min_game$total_free_shots, breaks = breaks_lim)
breaks_end_score_diff <- seq(1,max(last_min_game$end_score_diff),1)
hist(last_min_game$end_score_diff, breaks = breaks_end_score_diff)
hist(log(last_min_game$end_score_diff))
breaks_end_score_diff <- seq(1,max(last_min_game$end_score_diff),1)
hist(last_min_game$end_score_diff, breaks = breaks_end_score_diff)
#hist(log(last_min_game$end_score_diff))
ggplot(last_min_game, aes(x = end_score_diff, y = total_free_shots)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
poisson_regression <- glm(total_free_shots ~ end_score_diff, data = last_min_game, family = poisson(link = 'log'))
summary(poisson_regression)
ggplot(data = df) +
geom_bar(aes(x = player, fill = shot_made))+
theme(axis.text.x=element_text(angle=20, hjust=1))
This graph shows all the players showing the total number of shots and how many of them were scored.
```{r}
ggplot(data = df) +
geom_bar(aes(x = player, fill = shot_made))+
theme(axis.text.x=element_text(angle=20, hjust=1))
```
```{r}
player_shots <- df %>%
select(player, shot_made) %>%
group_by(player, shot_made) %>%
summarise(count=n())
player_shots <- df %>%
select(player, shot_made) %>%
group_by(player, shot_made) %>%
summarise(count=n())
player_shots <- player_shots %>%
group_by(player) %>%
mutate(
total = sum(count),
rate = count/sum(count)
) %>%
arrange(desc(total))
# player_shots %>%
#   group_by(player) %>%
# mutate(shot_made_rate = if (row_number(rate) = 1)
head(player_shots)
ggplot(data = player_shots[1:50,]) +
geom_bar(aes(x = reorder(player, desc(total)), y=count,fill = shot_made), stat='identity')+
theme(axis.text.x=element_text(angle=45, hjust=1))
player_shots_made <- player_shots[player_shots$shot_made == 1 & player_shots$count > 500,]
ggplot(data = arrange(player_shots_made, desc(player_shots_made$rate))[1:30,], aes(x = reorder(player, desc(rate)), y=rate, fill = shot_made)) +
geom_bar(stat='identity')+
theme(axis.text.x=element_text(angle=45, hjust=1))+
geom_text(aes(x = reorder(player, desc(rate)), y = rate,
label = paste0(as.integer(rate*100),"%")), size=2)
ggplot(data = arrange(player_shots_made, desc(player_shots_made$rate))[1:30,], aes(x = reorder(player, desc(count)), y=count)) +
geom_bar(stat='identity')+
theme(axis.text.x=element_text(angle=45, hjust=1))
hist(last_min_game$total_free_shots, breaks = breaks_free_shots)
packrat::init(options = list(auto.snapshot = TRUE, vcs.ignore.src = TRUE))
detach("package:drawsample", unload=TRUE)
detach("package:drawsamples", unload=TRUE)
detach("package:drawsample", unload=TRUE)
detach("package:drawsample 0.1.0", unload=TRUE)
(.packages())
detach("package:stats", unload=TRUE)
remove.packages("drawsample")
packrat::init(options = list(auto.snapshot = TRUE, vcs.ignore.src = TRUE, use.cache = TRUE))
packrat::init(options = list(vcs.ignore.src = TRUE))
detach("package:drawsample", unload=TRUE)
packrat::init()
(.packages())
packrat::init(options = list(vcs.ignore.src = TRUE, use.cache = TRUE))
packrat::init(options = list(vcs.ignore.src = TRUE, local.repos = c("~/Documents/git_projects/mango-test-R/drawsample_pkg/drawsample")))
packrat::init(options = list(vcs.ignore.src = TRUE))
sessionInfo()
drawsample
detach("package:methods", unload=TRUE)
packrat::init(infer.dependencies = F)
packrat::snapshot()
packrat::snapshot(infer.dependencies = F)
library('ggplot2')
install.packages(c('GGally', 'dplyr', 'lubridate', 'ggplot2'))
packrat::snapshot(infer.dependencies = F)
install.packages(c('drake', 'readr', 'dplyr', 'lubridate', 'rmarkdown', 'ggplot2'))
packrat::status()
install.packages('knitr')
packrat::snapshot(infer.dependencies = F)
packrat::status()
packrat::set_opts(local.repos = "")
packrat::status()
packrat::snapshot(infer.dependencies = F)
